<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
    <line>
      <![CDATA[I'm inside the 1st Test]]>
    </line>
    <line>
      <![CDATA[I'm gonna get the text 'Retrieve my car quote']]>
    </line>
    <line>
      <![CDATA[I'm gonna click 'Get My Price' button]]>
    </line>
    <line>
      <![CDATA[I'm gonna click 'Car' button]]>
    </line>
    <line>
      <![CDATA[I'm gonna click 'Next' button]]>
    </line>
    <line>
      <![CDATA[I'm gonna select 'Car year']]>
    </line>
    <line>
      <![CDATA[I'm gonna select 'Car make']]>
    </line>
    <line>
      <![CDATA[I'm gonna select 'Car model']]>
    </line>
    <line>
      <![CDATA[I'm gonna click 'Next' button]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="13850" started-at="2020-02-18T00:19:27Z" finished-at="2020-02-18T00:19:41Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="13850" started-at="2020-02-18T00:19:27Z" finished-at="2020-02-18T00:19:41Z">
      <class name="testCases.HomePageTests">
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:testCases.HomePageTests@4b9e13df]" name="openBrowser" is-config="true" duration-ms="4310" started-at="2020-02-18T00:19:23Z" finished-at="2020-02-18T00:19:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="openApplication()[pri:0, instance:testCases.HomePageTests@4b9e13df]" name="openApplication" is-config="true" duration-ms="1788" started-at="2020-02-18T00:19:27Z" finished-at="2020-02-18T00:19:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="FAIL" signature="checkGetMyPriceButton()[pri:0, instance:testCases.HomePageTests@4b9e13df]" name="checkGetMyPriceButton" duration-ms="12022" started-at="2020-02-18T00:19:29Z" finished-at="2020-02-18T00:19:41Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button _ngcontent-bdx-c13="" class="button-cta" id="btn_next">...</button> is not clickable at point (90, 437). Other element would receive the click: <div class="modal ng-trigger ng-trigger-modalState ng-tns-c4-7 modal--qq-license modal--qq-license-gh ng-star-inserted" style="">...</div>
  (Session info: chrome=80.0.3987.106)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7HB0GS3K', ip: '192.168.122.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.106, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\sebas\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55836}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b1fee6226176b596b3076d45f414d318]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button _ngcontent-bdx-c13="" class="button-cta" id="btn_next">...</button> is not clickable at point (90, 437). Other element would receive the click: <div class="modal ng-trigger ng-trigger-modalState ng-tns-c4-7 modal--qq-license modal--qq-license-gh ng-star-inserted" style="">...</div>
  (Session info: chrome=80.0.3987.106)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-7HB0GS3K', ip: '192.168.122.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.106, chrome: {chromedriverVersion: 79.0.3945.36 (3582db32b3389..., userDataDir: C:\Users\sebas\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:55836}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b1fee6226176b596b3076d45f414d318
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at testCases.HomePageTests.checkGetMyPriceButton(HomePageTests.java:81)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
            <line>
              <![CDATA[I'm inside the 1st Test]]>
            </line>
            <line>
              <![CDATA[I'm gonna get the text 'Retrieve my car quote']]>
            </line>
            <line>
              <![CDATA[I'm gonna click 'Get My Price' button]]>
            </line>
            <line>
              <![CDATA[I'm gonna click 'Car' button]]>
            </line>
            <line>
              <![CDATA[I'm gonna click 'Next' button]]>
            </line>
            <line>
              <![CDATA[I'm gonna select 'Car year']]>
            </line>
            <line>
              <![CDATA[I'm gonna select 'Car make']]>
            </line>
            <line>
              <![CDATA[I'm gonna select 'Car model']]>
            </line>
            <line>
              <![CDATA[I'm gonna click 'Next' button]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkGetMyPriceButton -->
      </class> <!-- testCases.HomePageTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
